{"version":3,"sources":["Components/user.js","Components/checkforwinner.js","Components/winner.js","Components/game.js","App.js","serviceWorker.js","index.js"],"names":["userFunction","props","player","react_default","a","createElement","Fragment","className","onClick","gamemode","horde","alliance","winnerCombosVertical","winnerCombosHorizontal","checkForWinner","array","index","find","combo","every","line","_loop","i","horizontal","map","colum","v","_ret","_loop2","_loop4","j","diagonalLeft","slice","k","_ret4","_ret2","_loop3","_loop5","diagonalRight","_ret5","_ret3","draw","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","column","value","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","err","return","hordeCheer","Audio","allianceCheer","legion","winner","useEffect","play","pause","currentTime","restartgame","exitgame","backgroundMusic","loop","hordeAudio","allianceAudio","generateBoard","rows","Array","fill","_","idx","row","coins","Object","toConsumableArray","volume","currentId","currentRow","generateId","rv","generateRow","_useState","useState","_useState2","slicedToArray","setColumn","_useState3","_useState4","turn","setTurn","_useState5","_useState6","setWinner","findLastEmptyCell","col","length","Components_winner","functionTurn","arrayCopy","onButtonClick","key","Classnames","appFunction","setPlayer","game","setGame","_useState7","_useState8","picture","setPicture","_useState9","_useState10","picture2","setPicture2","style","backgroundImage","concat","active","Components_game","console","log","user","mode","setTimeout","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dbd93e92.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../App.css';\r\n\r\nfunction userFunction(props) {\r\n\r\n    if (!props.player) {\r\n        return (\r\n            <>\r\n                <div className=\"userHeadline\">\r\n                    <h1>Choose your side!</h1>\r\n                </div>\r\n                <div className=\"userContainer\">\r\n                    <div onClick={props.horde} className=\"hordeContainer\"></div>\r\n                    <div onClick={props.alliance} className=\"allianceContainer\"></div>\r\n                </div>\r\n            </>\r\n        );\r\n    } else {\r\n        return (\r\n            <>\r\n                <div className=\"userHeadline\">\r\n                    <h1>Choose mode</h1>\r\n                </div>\r\n                <div className=\"userContainer\">\r\n                    <div className=\"gamemode\"><h1 onClick={() => { props.gamemode(\"1vs1\") }}>1vs1</h1></div>\r\n                    <div className=\"gamemode\"><h1 onClick={() => { props.gamemode(\"ai\") }}>AI</h1></div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default userFunction;\r\n","let winnerCombosVertical = [\r\n    [0, 1, 2, 3],\r\n    [1, 2, 3, 4],\r\n    [2, 3, 4, 5],\r\n];\r\nlet winnerCombosHorizontal = [\r\n    [0, 1, 2, 3],\r\n    [1, 2, 3, 4],\r\n    [2, 3, 4, 5],\r\n    [3, 4, 5, 6],\r\n];\r\nfunction checkForWinner(array, index, player) {\r\n    // CHECK VERTICAL WINNER//\r\n    const testVertical = winnerCombosVertical.find(combo => combo.every(line => array[index][line] === player))\r\n    if (testVertical) return player;\r\n    // CHECK HORIZONTAL WINNER//\r\n    for (let i = 0; i < 6; i++) {\r\n        const horizontal = array.map((colum) => {\r\n            return colum[i];\r\n        })\r\n        const testHorizontal = winnerCombosHorizontal.find(combo => combo.every(line => horizontal[line] === player))\r\n        if (testHorizontal) return player;\r\n    }\r\n    // CHECK DIAGONAL WINNER LEFT TO RIGHT//\r\n    for (let i = 0; i < 6; i++) {\r\n        for (let j = 0; j < 7; j++) {\r\n            const x = array.slice(j);\r\n            const diagonalLeft = x.map((colum, k) => {\r\n                return colum[i + k];\r\n            })\r\n            const testDiagonalLeft = winnerCombosHorizontal.find(combo => combo.every(line => diagonalLeft[line] === player))\r\n            if (testDiagonalLeft) return player;\r\n        }\r\n    }\r\n    // CHECK DIAGONAL WINNER RIGHT TO LEFT// \r\n    for (let i = 6; i > 0; i--) {\r\n        for (let j = 0; j < 7; j++) {\r\n            const x = array.slice(j);\r\n            const diagonalRight = x.map((colum, k) => {\r\n                return colum[i - k];\r\n            })\r\n            const testDiagonalRight = winnerCombosHorizontal.find(combo => combo.every(line => diagonalRight[line] === player))\r\n            if (testDiagonalRight) return player;\r\n        }\r\n    }\r\n    // CHECK DRAW//\r\n    let draw = true;\r\n    for (let column of array) {\r\n        for (let coin of column) {\r\n            if (!coin) {\r\n                draw=false;\r\n            }\r\n        }\r\n    }\r\n        if (draw)return \"Burning Legion\";\r\n\r\n\r\n}\r\n\r\nexport default checkForWinner","import React, { useEffect } from 'react';\r\n\r\nconst hordeCheer = new Audio(\"https://wow.zamimg.com/wowsounds/567388\");\r\nconst allianceCheer = new Audio(\"https://wow.zamimg.com/wowsounds/567383\");\r\nconst legion = new Audio(\"https://wow.zamimg.com/wowsounds/598232\")\r\n\r\nfunction winner(props) {\r\n\r\n    useEffect(() => {\r\n        if (props.player === \"horde\") {\r\n            hordeCheer.play();\r\n        } else if (props.player ===\"alliance\") {\r\n            allianceCheer.play();\r\n        }else{\r\n            legion.play();\r\n        }\r\n        return () => {\r\n            hordeCheer.pause();\r\n            allianceCheer.pause();\r\n            legion.pause();\r\n            hordeCheer.currentTime = 0;\r\n            allianceCheer.currentTime = 0;\r\n            legion.currentTime = 0;\r\n        }\r\n    }, [props.player])\r\n\r\n    const questText = () => {\r\n        if (props.player === \"horde\") {\r\n            return (\r\n                <p>\r\n                    The horde advanced on the battlefield, and after a heroic effort by Orcish leader,\r\n                    <br />\r\n                    the horde stod victorious! And the survinving humans became food for the hungry wolfs!\r\n                    <br />\r\n                    <br />\r\n                    FOR THE HORDE!\r\n                </p>\r\n            )\r\n        }\r\n        else if (props.player === \"alliance\") {\r\n            return (\r\n                <p>\r\n                    The leader of the Alliance stod victorious after a long cruel battle <br />\r\n                    The last orc on the battlefield begged for his life but the strong human, the leader of the alliance,<br />\r\n                    wield his sword and the ground got decorated with orcish blood!\r\n                    <br />\r\n                    <br />\r\n                    For the Alliance!!\r\n                </p>\r\n            )\r\n        }else {\r\n            return (\r\n                <p>\r\n                    While the grate battle between the Horde and the Alliance the sky turned red and fallan stars<br/>\r\n                    began to rain down on the battlefield. From the firey mass the evil Archimond appears!\r\n                    with his Legion he wiped out the entire Army from the Horde and The Alliance! \r\n                    <br/>\r\n                    <br/>\r\n                    The World shall burn!\r\n                    Leave none alive! \r\n                </p>\r\n            )\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"overlay\">\r\n            <div className=\"winner-container\">\r\n                <div className=\"winner-container-header\">\r\n                    <h1 className=\"winner-text\">Quest complete</h1>\r\n                </div>\r\n                <div className=\"winner-container-player\">\r\n                    <h2 className=\"winner-text\">The {props.player} won the battle!</h2>\r\n                </div>\r\n                <div className=\"fun-facts\">\r\n                    {questText()}\r\n                </div>\r\n                <div className=\"winner-container-buttons\">\r\n                    <button onClick={props.restartgame} className=\"body-button\">Restart Game</button>\r\n                    <button onClick={props.exitgame} className=\"body-button\">Exit Game</button>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default winner","import React, { useState, useEffect } from 'react';\r\nimport Classnames from \"classnames\"\r\nimport checkForWinner from \"./checkforwinner.js\"\r\nimport Winner from \"./winner.js\"\r\nimport '../App.css';\r\n\r\nconst backgroundMusic = new Audio(\"https://wow.zamimg.com/wowsounds/772738\");\r\nbackgroundMusic.loop = true;\r\nconst hordeAudio = new Audio(\"https://wow.zamimg.com/wowsounds/1324843\");\r\nconst allianceAudio = new Audio(\"https://wow.zamimg.com/wowsounds/1324777\");\r\nhordeAudio.volume = 0.2;\r\nallianceAudio.volume = 0.2;\r\n\r\nfunction generateBoard() {\r\n    const rows = Array(7).fill(null).map((_, idx) => idx);\r\n    for (let row of rows) {\r\n        const coins = Array(6).fill(null).map((_, idx) => null);\r\n        rows[row] = [...coins]\r\n    }\r\n    return rows;\r\n}\r\n\r\nlet currentId = 0;\r\nlet currentRow = 0;\r\n\r\nfunction generateId() {\r\n    const rv = currentId;\r\n    currentId += 1;\r\n    return rv;\r\n}\r\nfunction generateRow() {\r\n    const rv = currentRow;\r\n    currentRow += 1;\r\n    return rv;\r\n}\r\n\r\nfunction userFunction(props) {\r\n    const [column, setColumn] = useState(generateBoard())\r\n    const [turn, setTurn] = useState(props.player)\r\n    const [winner, setWinner] = useState(\"\");\r\n    // const [singleplayer,setSingelplayer] = useState(props.gamemode)\r\n\r\n    useEffect(() => {\r\n        backgroundMusic.play();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (winner) {\r\n            backgroundMusic.pause();\r\n            backgroundMusic.currentTime = 0;\r\n        }\r\n\r\n    }, [winner]);\r\n\r\n    const onButtonClick = (row, index) => {\r\n        let arrayCopy = [...column]\r\n        let col = arrayCopy[index];\r\n        if (findLastEmptyCell(col) === null) return;\r\n        if (turn === \"horde\") {\r\n            hordeAudio.currentTime = 0;\r\n            hordeAudio.play();\r\n        } else {\r\n            allianceAudio.currentTime = 0;\r\n            allianceAudio.play();\r\n        }\r\n        props.functionTurn();\r\n        setColumn(arrayCopy);\r\n        setWinner(checkForWinner(column, index, turn));\r\n        if (turn === \"horde\") {\r\n            setTurn(\"alliance\")\r\n        } else {\r\n            setTurn(\"horde\")\r\n        }\r\n    }\r\n    const findLastEmptyCell = (col) => {\r\n        for (let i = 0; i < col.length; i++) {\r\n            if (col[i] === null) {\r\n                col[i] = turn;\r\n                return\r\n            }\r\n        }\r\n        return null\r\n    }\r\n    const resetUser = () => {\r\n        setWinner(\"\")\r\n        props.functionTurn();\r\n        backgroundMusic.play();\r\n        if (turn === \"horde\") {\r\n            setTurn(\"alliance\")\r\n        } else {\r\n            setTurn(\"horde\")\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            {winner ? <Winner restartgame={() => { setColumn(generateBoard()); resetUser() }} exitgame={() => { setColumn(generateBoard()); props.exitgame(); }} player={winner} /> : null}\r\n            <div className=\"Gameboard\">\r\n                {column.map((row, index) =>\r\n                    <div className=\"row\" onClick={() => onButtonClick(row, index)} key={generateRow()}>\r\n                        {column[index].map(player =>\r\n                            <div\r\n                                key={generateId()}\r\n                                className={Classnames(\"circle\", [player])}>\r\n                            </div>)}\r\n                    </div>)}\r\n            </div>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default userFunction;\r\n","import React, { useState, useEffect } from 'react';\r\nimport User from \"./Components/user.js\"\r\nimport Game from \"./Components/game.js\"\r\nimport './App.css';\r\nimport Classnames from \"classnames\"\r\n\r\nconst hordeAudio = new Audio(\"https://wow.zamimg.com/wowsounds/1582528\");\r\nconst allianceAudio = new Audio(\"https://wow.zamimg.com/wowsounds/1902387\");\r\n\r\nfunction appFunction() {\r\n  const [player, setPlayer] = useState(null);\r\n  const [turn, setTurn] = useState(true);\r\n  const [game, setGame] = useState(null);\r\n  const [picture, setPicture] = useState();\r\n  const [picture2, setPicture2] = useState();\r\n\r\n  useEffect(() => {\r\n    if (player === \"horde\") {\r\n      setPicture(\"https://www.usfine.com/images/game_left/world-of-warcraft.png\");\r\n      setPicture2(\"http://heroes.blizzplanet.com/wp-content/uploads/2015/11/blizzcon-2015-genn-greymane-human.png\");\r\n    } else {\r\n      setPicture(\"http://heroes.blizzplanet.com/wp-content/uploads/2015/11/blizzcon-2015-genn-greymane-human.png\");\r\n      setPicture2(\"https://www.usfine.com/images/game_left/world-of-warcraft.png\");\r\n    }\r\n  }, [player]);\r\n\r\n  function hordeUser() {\r\n    hordeAudio.play();\r\n    setTimeout(function () {\r\n      setPlayer(\"horde\")\r\n    }, 1500);\r\n\r\n  }\r\n  function allianceUser() {\r\n    allianceAudio.play();\r\n    setTimeout(function () {\r\n      setPlayer(\"alliance\")\r\n    }, 2000);\r\n  }\r\n  function gameMode(mode) {\r\n    setTimeout(function () {\r\n      setGame(mode)\r\n    }, 500);\r\n  }\r\n  function turnFunction() {\r\n    setTurn(!turn);\r\n  }\r\n  function exitGame(){\r\n    console.log(\"exit\")\r\n    setGame(null);\r\n    setPlayer(null)\r\n    setTurn(true);\r\n  }\r\n\r\n  if (!game) {\r\n    return (\r\n      <div className=\"firstpage\">\r\n        <User gamemode={gameMode} player={player} horde={hordeUser} alliance={allianceUser} />\r\n      </div>\r\n    );\r\n  }\r\n  else {\r\n    return (\r\n      <>\r\n        <div className=\"App\">\r\n          <div\r\n            style={{\r\n              backgroundImage: `url(${picture})`,\r\n            }}\r\n            className={Classnames(\"userInfo\",\r\n            { \"active\":turn===true})}\r\n            >\r\n          </div>\r\n          <Game player={player} exitgame={exitGame} functionTurn={turnFunction} />\r\n          <div\r\n            style={{\r\n              backgroundImage: `url(${picture2})`,\r\n            }}\r\n            className={Classnames(\"user2Info\",\r\n              { \"active\":turn===false})}\r\n          >\r\n          </div>\r\n        </div>\r\n\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default appFunction;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}